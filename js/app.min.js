import { welcome as e, main as l, navbar as o, hero as t, beinspyredText as a, logos as s, contactBtn as c, contactWrapper as n, date as r, items as i, imagesEnvelop as d, galleryWrapper as m } from "./moduleFiles/declarations.js"; let scrollImages = document.querySelectorAll(".otherImg article div img"), move = 1, moveImages = () => { scrollImages.forEach(e => { e.style.cssText = `translate: -${move++}px`, 1e4 === move && (move = 1) }) }; setInterval(moveImages, 1e3), r.innerText = new Date().getFullYear(), s.forEach(e => { e.onclick = () => { window.location.reload() } }), window.onload = () => { e.style.display = "none", l.style.display = "block" }; let aboutModal = document.querySelector(".aboutModalOverlay"), close = document.querySelector(".close-btn"), open = document.querySelector(".about-btn"), openModal = () => { aboutModal.classList.add("open-modal"), close.onclick = () => { aboutModal.classList.remove("open-modal") } }; open.onclick = openModal, c.forEach(e => { e.onclick = () => { n.classList.add("show") } }), n.onclick = () => { n.classList.remove("show") }, window.onscroll = () => { let e = window.pageYOffset, l = o.getBoundingClientRect().height, a = t.getBoundingClientRect().height; if (e > l ? o.classList.add("fixed-nav") : o.classList.remove("fixed-nav"), e > a) { o.classList.add("navColorChange"); let s = document.querySelectorAll(".nav-logo"); s.forEach(e => { e.onclick = () => { window.location.reload() } }) } else { o.classList.remove("navColorChange"); let c = document.querySelectorAll(".nav-logo"); c.forEach(e => { e.onclick = () => { window.location.reload() } }) } }; let strText = a.textContent, splitText = strText.split(""); a.innerHTML = "", splitText.forEach(e => { a.innerHTML += `<span>${e}</span>` }); let char = 0, ontick = () => { if (a.querySelectorAll("span")[char].classList.add("show"), ++char === splitText.length) { complete(); return } }, complete = () => { clearInterval(timer) }, timer = setInterval(ontick, 200), updateCount = e => { let l = parseInt(e.dataset.value), o = Math.ceil(l / 1e3), t = 0, a = setInterval(() => { if ((t += o) > l) { e.textContent = `${l}+`, clearInterval(a); return } e.textContent = `${t}+` }, 1) }; i.forEach(e => { updateCount(e) }), d.onclick = e => { let l = e.target; l.classList.contains("galleryImage") && (m.classList.add("show"), m.innerHTML = `<div class="galleryModal"><img src=${l.src}><h3>description</h3><div class="underline"></div><p>${l.alt}</p></div>`) }, m.onclick = e => { e.currentTarget.classList.remove("show") };